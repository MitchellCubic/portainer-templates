# docker network create my-net
# docker volume create psql_storage
# docker-compose -f docker-compose-kc-psql-nginx.yml up -d
version: '3.7'
networks:
  proxy-net:
    external: true
  default:
    name: ${CONTAINER_NAME}-kc-net
volumes:
  psql_storage:
    external: true
services:
  postgres:
    image: postgres:13.3-alpine
    container_name: ${CONTAINER_NAME}-psql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
    networks:
      - default
    ports:
      - '5437:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./psql_storage:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: ${CONTAINER_NAME}-kc
    command: >
      bash -c "kc.sh build &&
               kc.sh start"
    networks:
      - proxy-net
      - default
    environment:
      #database
      KC_DB: keycloak
      KC_DB_URL_HOST: postgres 
      KC_DB_PORT: 5432
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      #hostname and TLS
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_PROXY: edge
      KC_LOG_LEVEL: INFO
      # KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/tls.key
      # JDBC_PARAMS: 'connectTimeout=30'
    volumes:
      - ./keycloak_data:/opt/keycloak/data
      - ./keycloak_certs:/etc/x509/https:ro
    ports:
      - ${ACCESS_PORT}:8443
    depends_on:
      - postgres
    healthcheck:
      test: curl --fail -s http://localhost:8080 || exit 1
      start_period: 30s
      interval: 15s
      timeout: 15s
      retries: 5
