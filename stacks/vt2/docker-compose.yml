#ctc docker stack

version: '3.5'
services:
  mongodb:
    image: mitchellday06/vt2mongo:latest
    container_name: demo-cubicvt2-mongodb
    volumes:
      - "/data/demo-mongodb:/data/db"
      - "/data/demo-mongodb/config:/data/configdb"
      #- ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Password1
      MONGO_INITDB_DATABASE: vt2db
    ports:
      - 27018:27017
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongo mongo:27019/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s
    restart: on-failure
  
  #create vt2 app
  # vt2:
  #   build: ./app
  #   container_name: ${VT2_CONTAINER_NAME}
  
  #     MONGO_ADDRESS: ${MONGO_CONTAINER_NAME}
  #     APP_NAME: ${VT2_APP_NAME}
  #   ports:
  #     - 445:443
  #     - 82:80
  #   restart: always
  vt2:
    image: mitchellday06/cubicvt2:1.0.3
    container_name: demo-cubic-vt2
    command: npm run server
    volumes:
      - "/var/vt2/demo/video_results:/app/data/tewts/results/videos"
    environment:
      MONGO_ADDRESS: demo-cubicvt2-mongodb
      #MONGO_ADDRESS: mongodb
      APP_NAME: "Demo VT2"
    #ports:
      #- 442:443
    depends_on:
      mongodb:
        #condition: service_healthy
        condition: service_started
    restart: on-failure
networks:
  default:
    name: demo-net
  poxy-net:
    external:
      name: proxy-net
